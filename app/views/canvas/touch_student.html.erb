
<link rel="stylesheet" href="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.css" />
<script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>
<script src="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.js"></script>

<canvas id="myCanvas" width="800" height="600" style="border: 1px solid gray;"></canvas>
<div id="result" style="width:400px; height:400px; overflow:auto;">
	
</div>

<script src="https://pubnub.a.ssl.fastly.net/pubnub-3.5.3.min.js"></script>
<script src="/js/stroke_player.js"></script>

<!-- Use WebSocket Constructor for a New Socket Connection -->
<script>
	var player ;

	(function() {

		player = StrokePlayer('myCanvas', 100);

	    /* 'wss://ORIGIN/PUBLISH_KEY/SUBSCRIBE_KEY/CHANNEL' */
	    WebSocket  = PUBNUB.ws;
	    var socket = new WebSocket('wss://pubsub.pubnub.com/demo/sub-c-5639cc4c-fe7e-11e2-b670-02ee2ddab7fe/classid_whiteboard')

	    // On Message Receive
	    socket.onmessage = function(evt) {
	    	var obj = JSON.parse(evt.data)  ;
	    	var points_uqid = obj.points_uqid ;
	    	if (points_uqid) {
	        	//get points
	        	$.get('/canvas/get_points?uqid=' + points_uqid, function(data) {
	        		draw(data);
				});
	        }
	        else if (obj.cleared) {
	        	var el = document.getElementsByTagName("canvas")[0];
		  		var ctx = el.getContext("2d");
	        	ctx.clearRect(0,0,800,600);
	        }
	        /*
	        console.log('socket receive');
	        console.log(evt.data);
	        */
	    }

	    // On Socket Close
	    socket.onclose = function() {
	        console.log('socket closed');
	    }

	    // On Error
	    socket.onerror = function() {
	        console.log('socket error');
	    }

	    // On Connection Establish
	    socket.onopen = function(evt) {
	        console.log('socket open');

	        // Send a Message!
	        socket.send('hello world!');
	    }

	    // On Send Complete
	  	/*
	    socket.onsend = function(evt) {
	        console.log('socket send');
	        console.log(evt);
	    }
		*/
	    console.log(socket)

	})();
</script>


<!-- <script src=http://cdn.pubnub.com/pubnub-3.5.3.min.js ></script> -->
<script>
	/*
	var pubnub ;
	var the_channel = 'classid_whiteboard';
	(function(){

	    // Init
	    pubnub = PUBNUB.init({
	        subscribe_key : 'sub-c-5639cc4c-fe7e-11e2-b670-02ee2ddab7fe'
	    });

	    
	    // LISTEN
	    pubnub.subscribe({
	        channel : the_channel,
	        message : function(m){ 
	        	//alert(m) ;
	        	var obj = JSON.parse(m);
	        	var points_uqid = obj.points_uqid ;
	        	if (points_uqid) {
		        	//get points
		        	$.get('/canvas/get_points?uqid=' + points_uqid, function(data) {
		        		draw(data);
					});
		        }
		        else if (obj.cleared) {
		        	var el = document.getElementsByTagName("canvas")[0];
			  		var ctx = el.getContext("2d");
		        	ctx.clearRect(0,0,400,400);
		        }
	        	
	        },
	        restore : true 
	    });
	})();
	*/

	

	var appendMsg = function (msg) {
		$("<div>" + msg + "</div>").appendTo('#result');
	};

	var draw = function(points) {
		player.play(points);
		/*
		if (points.length == 0)
			return ;

		var el = document.getElementsByTagName("canvas")[0];
	  	var ctx = el.getContext("2d");
	  	
	  	var ptInit = points[0];
	  	ctx.beginPath();

		ctx.moveTo(ptInit.x, ptInit.y);

		appendMsg("move to (" + ptInit.x + ", " + ptInit.y + ") ===" );

		$(points).each(function(index, pt) {
			if (index > 0) {
				ctx.lineWidth = pt.lw ;
				ctx.lineTo(pt.x, pt.y);
				ctx.stroke();
			}

			if (index == 1) {
				appendMsg("start at (" + pt.x + ", " + pt.y + ") ===" );
			}


			if (index == points.length -1) {
				appendMsg("end at (" + pt.x + ", " + pt.y + ") ===" );
			}
		});
		*/
		
	};

	

</script>

-->
